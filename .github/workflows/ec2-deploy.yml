name: EC2 Deployment Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  AWS_REGION: us-east-1
  EC2_INSTANCE_ID: i-1234567890abcdef0
  SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
  USER: ec2-user
  HOST: ${{ secrets.EC2_HOST }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

      - name: Build application
        run: npm run build

      - name: Archive production artifacts
        run: tar -czf app.tar.gz -C build .

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: app.tar.gz

      - name: Copy files to EC2
        uses: appleboy/scp-action@v0.1.0
        with:
          host: ${{ env.HOST }}
          username: ${{ env.USER }}
          key: ${{ env.SSH_KEY }}
          source: "app.tar.gz"
          target: "/home/${{ env.USER }}/app.tar.gz"

      - name: Execute remote SSH commands
        uses: appleboy/ssh-action@v0.1.0
        with:
          host: ${{ env.HOST }}
          username: ${{ env.USER }}
          key: ${{ env.SSH_KEY }}
          script: |
            tar -xzf /home/${{ env.USER }}/app.tar.gz -C /var/www/weather-app
            cd /var/www/weather-app
            npm install --production
            pm2 restart weather-app || pm2 start npm --name "weather-app" -- start
name: GKE Deployment Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: weather-app
  PROJECT_ID: dev-zephyr-352206
  CLUSTER_NAME: your-gke-cluster
  GKE_ZONE: your-gke-zone
  GKE_NAMESPACE: default

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ github.repository }}:${{ github.sha }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Check and Create Artifact Registry Repository
        run: |
          REPO_NAME=${{ github.repository }}
          REGION=${{ env.GKE_ZONE }}
          EXISTING_REPO=$(gcloud artifacts repositories list --filter="name:projects/${{ env.PROJECT_ID }}/locations/${REGION}/repositories/${REPO_NAME}" --format="value(name)")
          if [ -z "$EXISTING_REPO" ]; then
            echo "Repository $REPO_NAME does not exist. Creating..."
            gcloud artifacts repositories create $REPO_NAME --repository-format=docker --location=$REGION --description="Docker repository for $REPO_NAME"
          else
            echo "Repository $REPO_NAME already exists."
          fi

      - name: Get GKE credentials
        run: |
          gcloud container clusters get-credentials ${{ env.CLUSTER_NAME }} --zone ${{ env.GKE_ZONE }}

      - name: Deploy to GKE
        run: |
          kubectl set image deployment/${{ env.SERVICE_NAME }} ${env.SERVICE_NAME}=${{ env.REGISTRY }}/${{ github.repository }}:${{ github.sha }} -n ${{ env.GKE_NAMESPACE }}
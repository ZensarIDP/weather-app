name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: weather-app
  PROJECT_ID: dev-zephyr-352206
  SERVICE_NAME: weather-app
  REGION: asia-south1
  DEPLOYMENT_TYPE: cloudrun
  # GKE specific variables (only used if deployment type is GKE)
  GKE_CLUSTER: 
  GKE_ZONE: 
  GKE_NAMESPACE: 

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

      - name: Run linting (with auto-fix, non-blocking)
        run: |
          npm run lint:fix || true
          npm run lint || echo "Linting completed with warnings/errors but not blocking build"

  deploy:
    if: github.ref == 'refs/heads/main'
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history to count commits

      - name: Check if this is first push
        id: check_commits
        run: |
          commit_count=$(git rev-list --count HEAD)
          echo "Total commits: $commit_count"
          
          if [ "$commit_count" -le 1 ]; then
            echo "This is the first push - skipping deployment"
            echo "should_deploy=false" >> $GITHUB_OUTPUT
          else
            echo "This is push #$commit_count - proceeding with deployment"
            echo "should_deploy=true" >> $GITHUB_OUTPUT
          fi

      - name: Authenticate to Google Cloud
        if: steps.check_commits.outputs.should_deploy == 'true'
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        if: steps.check_commits.outputs.should_deploy == 'true'
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Check and Create Artifact Registry Repository
        if: steps.check_commits.outputs.should_deploy == 'true'
        run: |
          REPO_NAME=${{ env.IMAGE_NAME }}
          REGION=${{ env.REGION }}
          PROJECT_ID=${{ env.PROJECT_ID }}
          
          echo "Checking if Artifact Registry repository $REPO_NAME exists..."
          if ! gcloud artifacts repositories describe $REPO_NAME --location=$REGION --project=$PROJECT_ID > /dev/null 2>&1; then
            echo "Repository $REPO_NAME does not exist. Creating..."
            gcloud artifacts repositories create $REPO_NAME \
              --repository-format=docker \
              --location=$REGION \
              --description="Docker repository for $REPO_NAME"
          else
            echo "Repository $REPO_NAME already exists."
          fi

      - name: Build and push Docker image
        if: steps.check_commits.outputs.should_deploy == 'true'
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ github.repository }}:${{ github.sha }}